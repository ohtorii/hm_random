/*秀丸エディタから乱数列を生成するマクロ

秀丸エディタで乱数を生成するマクロがなかったので自作しました。
（浮動小数点版の秀丸エディタにはあるようですが、当方は普通の秀丸エディタなので。）

以下をメニューから選択します。
    ＊生成する個数

    ＊乱数の種類
        sfmt(SIMD-oriented Fast Mersenne Twister.)
        xorshift
        xor
        xor64
        xorwow
        drand48

    ＊最大最小値の基数
        2
        10
        16

    ＊最小値

    ＊最大値

    ＊プレフィックス

    ＊出力乱数の基数
        2
        10
        16

    ＊区切り
        改行
        カンマ
        空白

生成した乱数は新しい秀丸エディタに追加されます。


（動かない）
＊マクロ起動時にダイアログの表示がおかしな時は、設定ファイル(hm_random_menu.ini)
  を削除してみて下さい。


（連絡先）
    http://d.hatena.ne.jp/ohtorii/
    https://github.com/ohtorii/hm_random
*/

//ダイアログの設定を保存する(.ini)ファイル名。
$g_ini_file_name		= currentmacrodirectory + "\\" + "hm_random_menu.ini";
$g_ini_section_name 	= "section";



////////////////////////////////////////////////////////////////////////////
//ダイアログのデフォルト値
$g_default_num			= "32";
$g_default_func 		= "1";		//SFMT
$g_default_in_base		= "2";		//10進数
$g_default_min			= "-100";
$g_default_max			= "100";
$g_default_prefix		= "";
$g_default_out_base 	= "2";		//10進数
$g_default_delimiter	= "1";		//改行
////////////////////////////////////////////////////////////////////////////
//exeへ渡す引数。
$g_rnd_num				= "";
$g_rnd_func 			= "";
$g_rnd_in_base			= "";
$g_rnd_min				= "";
$g_rnd_max				= "";
$g_rnd_prefix			= "";
$g_rnd_out_base 		= "";
$g_rnd_delimiter		= "";
////////////////////////////////////////////////////////////////////////////
$g_tbl_ord[0]			= "2進数";
$g_tbl_ord_str[0]		= "2";
$g_tbl_ord[1]			= "10進数";
$g_tbl_ord_str[1]		= "10";
$g_tbl_ord[2]			= "16進数";
$g_tbl_ord_str[2]		= "16";
#g_tbl_ord_num			= 3;
////////////////////////////////////////////////////////////////////////////
$g_tbl_delimiter[0] 	= "改行";
$g_tbl_delimiter_str[0] = "\\n";
$g_tbl_delimiter[1] 	= "カンマ";
$g_tbl_delimiter_str[1] = ",";
$g_tbl_delimiter[2] 	= "空白";
$g_tbl_delimiter_str[2] = " ";
$g_tbl_delimiter[3] 	= "無し";
$g_tbl_delimiter_str[3] = "";
#g_tbl_delimiter_num	= 4;
////////////////////////////////////////////////////////////////////////////
$g_tbl_name[0]			= "SIMD-oriented Fast Mersenne Twister  (周期 2^19937-1)";
$g_tbl_func[0]			= "sfmt";
$g_tbl_name[1]			= "xorshift[xor128]  (周期 2^128-1)";
$g_tbl_func[1]			= "xorshift";
$g_tbl_name[2]			= "xorshift[xor]  (周期 2^32-1)";
$g_tbl_func[2]			= "xor";
$g_tbl_name[3]			= "xorshift[xor64]  (周期 2^64-1)";
$g_tbl_func[3]			= "xor64";
$g_tbl_name[4]			= "xorshift[xorwow]  (周期 2^192-2^32)";
$g_tbl_func[4]			= "xorwow";
#g_num_tbl_name 		= 5;
////////////////////////////////////////////////////////////////////////////

//DengakuDLLをロードしたかどうか。
#g_dengaku_state		= false;



call Main;
if(#g_dengaku_state){
	freedll;
}
endmacro str(result);


Main:
	call LoadDengaku;
	if(! result){
		return false;
	}
	call LoadIni;
	call ShowDialog;
	if(! ##return){
		return false;
	}


	#num = val($g_rnd_num);
	if(#num<=0){
		return false;
	}
	execmacro currentmacrodirectory+"\\hm_random_main.mac",
		$g_rnd_num,
		$g_rnd_func,
		$g_rnd_in_base,
		$g_rnd_min,
		$g_rnd_max,
		$g_rnd_prefix,
		$g_rnd_out_base,
		$g_rnd_delimiter;
	return val(getresultex(-1));


ShowDialog:
	##n = dllfunc("NEWDIALOG","乱数の設定",61);

	##n = dllfunc("NEWCONTROL","text","txt1","生成する個数");
	##n = dllfunc("NEWCONTROL","edit","num",$g_default_num);

	call MakeMenu "乱数の種類", "func", 0, $g_default_func;
	if(! result){
		return false;
	}

	call MakeMenu "最大最小値の基数", "in_base", 1, $g_default_in_base;
	if(! result){
		return false;
	}

	##n = dllfunc("NEWCONTROL","text","txt2","最小値");
	##n = dllfunc("NEWCONTROL","edit","min",$g_default_min);

	##n = dllfunc("NEWCONTROL","text","txt3","最大値");
	##n = dllfunc("NEWCONTROL","edit","max",$g_default_max);

	##n = dllfunc("NEWCONTROL","text","txt4","プレフィックス");
	##n = dllfunc("NEWCONTROL","edit","prefix",$g_default_prefix);

	call MakeMenu "乱数の基数", "out_base", 1, $g_default_out_base;
	if(! result){
		return false;
	}

	call MakeMenu "区切り", "delimiter", 2, $g_default_delimiter;

	##n = dllfunc("NEWCONTROL","okcancel","","");

	if(! dllfunc("SHOWDIALOG",hidemaruhandle(0),1)){
		return false;
	}

	//イベントループ
	$name = "";
	while(1){
		while (strlen($name) == 0) {
			$name = dllfuncstr("WAITCTRLNOTIFY",10);
		}
		##notify = val($name);
		if (##notify <= 1) break; // 「ＯＫ」または「キャンセル」
	}
	if (!dllfunc("ENDDIALOG")) goto ERROR;
	if (leftstr($name,1) != "1"){
		//キャンセル
		return false;
	}

	call SetDialogValueToGlobalValue;
	##ret = ##return;
	call SaveIni;
	return ##ret;


MakeMenu:
	$$title 	= $$1;
	$$value_name= $$2;
	##no		= ##3;
	$$default	= $$4;

	if(0==##no){
		##menu_num = #g_num_tbl_name;
	}else if(1==##no){
		##menu_num = #g_num_tbl_name;
	}else if(2==##no){
		##menu_num = #g_tbl_delimiter_num;
	}

	##n = dllfunc("NEWCONTROL","text","",$$title);
	##n = dllfunc("SETCTRLWIDTH","",15);
	##n = dllfunc("NEWCONTROL","cmblist",$$value_name,"");

	##i = 0;
	while(##i < ##menu_num){
		if(0==##no){
			$$menu_name = $g_tbl_name[##i];
		}else if(1==##no){
			$$menu_name = $g_tbl_ord[##i];
		}else if(2==##no){
			$$menu_name = $g_tbl_delimiter[##i];
		}

		##n = dllfunc("SETCTRLITEM","",$$menu_name,"-1");
		##i=##i+1;
	}

	##n=dllfunc("SETCTRLSTATE",$$value_name, $$default);
	return true;

SetDialogValueToGlobalValue:
	$g_rnd_num		= dllfuncstr("GETCTRLSTRING","num");

	$$func			= dllfuncstr("GETCTRLSTATE","func");
	if("0"==$$func){
		return false;
	}
	$g_rnd_func 	= $g_tbl_func[val($$func)-1];

	$$in_base		= dllfuncstr("GETCTRLSTATE","in_base");
	if("0"==$$in_base){
		return false;
	}
	$g_rnd_in_base	= $g_tbl_ord_str[val($$in_base)-1];

	$g_rnd_min		= dllfuncstr("GETCTRLSTRING","min");
	$g_rnd_max		= dllfuncstr("GETCTRLSTRING","max");
	$g_rnd_prefix	= dllfuncstr("GETCTRLSTRING","prefix");

	$$out_base		= dllfuncstr("GETCTRLSTATE","out_base");
	if("0"==$$out_base){
		return false;
	}
	$g_rnd_out_base = $g_tbl_ord_str[val($$out_base)-1];

	$$delimiter 	= dllfuncstr("GETCTRLSTATE","delimiter");
	if("0" == $$delimiter){
		return false;
	}
	$g_rnd_delimiter= $g_tbl_delimiter_str[val($$delimiter)-1];
	return true;


SaveIni:
	$$fn = $g_ini_file_name;
	$$sc = $g_ini_section_name;
	writeinistr $$fn,$$sc,"num" 		,dllfuncstr("GETCTRLSTRING","num");
	writeinistr $$fn,$$sc,"func"		,dllfuncstr("GETCTRLSTATE","func");
	writeinistr $$fn,$$sc,"in_base" 	,dllfuncstr("GETCTRLSTATE","in_base");
	writeinistr $$fn,$$sc,"min" 		,dllfuncstr("GETCTRLSTRING","min");
	writeinistr $$fn,$$sc,"max" 		,dllfuncstr("GETCTRLSTRING","max");
	writeinistr $$fn,$$sc,"prefix"		,dllfuncstr("GETCTRLSTRING","prefix");
	writeinistr $$fn,$$sc,"out_base"	,dllfuncstr("GETCTRLSTATE","out_base");
	writeinistr $$fn,$$sc,"delimiter"	,dllfuncstr("GETCTRLSTATE","delimiter");
	return;


LoadIni:
	$$fn = $g_ini_file_name;
	$$sc = $g_ini_section_name;

	$$val = getinistr($$fn,$$sc,"num");
	if(0!=strlen($$val)){
		$g_default_num=$$val;
	}

	$$val = getinistr($$fn,$$sc,"func");
	if(0!=strlen($$val)){
		$g_default_func=$$val;
	}

	$$val = getinistr($$fn,$$sc,"in_base");
	if(0!=strlen($$val)){
		$g_default_in_base=$$val;
	}

	$$val = getinistr($$fn,$$sc,"min");
	if(0!=strlen($$val)){
		$g_default_min=$$val;
	}

	$$val = getinistr($$fn,$$sc,"max");
	if(0!=strlen($$val)){
		$g_default_max=$$val;
	}

	$$val = getinistr($$fn,$$sc,"prefix");
	if(0!=strlen($$val)){
		$g_default_prefix=$$val;
	}

	$$val = getinistr($$fn,$$sc,"out_base");
	if(0!=strlen($$val)){
		$g_default_out_base=$$val;
	}

	$$val = getinistr($$fn,$$sc,"delimiter");
	if(0!=strlen($$val)){
		$g_default_delimiter=$$val;
	}
	return;

LoadDengaku:
	#g_dengaku_state=false;
	loaddll hidemarudir + "\\DengakuDLL.dll";
	if (!result) {
		message "DLL をロードできませんでした。";
		return false;
	}
	$DLLVer = dllfuncstr("GETVERSION");
	if (val(leftstr($DLLVer, 1)) < 2) {
		message "このマクロの実行には Ver.2.00 以降の田楽ＤＬＬが必要です。";
		freedll;
		return false;
	}
	#g_dengaku_state=true;
	return true;
